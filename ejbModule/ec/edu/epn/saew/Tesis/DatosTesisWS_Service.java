package ec.edu.epn.saew.Tesis;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.ResourceBundle;

import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.14.redhat-1
 * 2016-06-21T08:10:11.585-05:00 Generated source version: 2.7.14.redhat-1
 * 
 */
@WebServiceClient(name = "DatosTesisWS", targetNamespace = "https://saew.epn.edu.ec/saewstesis/")
public class DatosTesisWS_Service extends Service {

	public final static URL WSDL_LOCATION;

	public final static QName SERVICE = new QName("https://saew.epn.edu.ec/saewstesis/", "DatosTesisWS");
	public final static QName DatosTesisWSSoap12 = new QName("https://saew.epn.edu.ec/saewstesis/",
			"DatosTesisWSSoap12");
	public final static QName DatosTesisWSSoap = new QName("https://saew.epn.edu.ec/saewstesis/", "DatosTesisWSSoap");
	static {
		URL url = null;
		String path = DatosTesisWS_Service.class.getResource(

				"/ec/edu/epn/saew/Tesis/SaewTesis.wsdl").getFile();
		path = "file:" + path;
		System.out.println(path);

		try {

			url = new URL(path);
		} catch (MalformedURLException e) {
			java.util.logging.Logger.getLogger(DatosTesisWS_Service.class.getName()).log(java.util.logging.Level.INFO,
					"Can not initialize the default wsdl from {0}", path);
		}
		WSDL_LOCATION = url;
	}

	public DatosTesisWS_Service(URL wsdlLocation) {
		super(wsdlLocation, SERVICE);
	}

	public DatosTesisWS_Service(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public DatosTesisWS_Service() {
		super(WSDL_LOCATION, SERVICE);
	}

	private void setCredentials(DatosTesisWSSoap port) {
		ResourceBundle bundle = ResourceBundle.getBundle("ec.edu.epn.saew.Tesis.ClienteWSFacturacion");

		((BindingProvider) port).getRequestContext().put(BindingProvider.USERNAME_PROPERTY, bundle.getString("user"));

		((BindingProvider) port).getRequestContext().put(BindingProvider.PASSWORD_PROPERTY,
				bundle.getString("password"));

		((BindingProvider) port).getRequestContext().put(BindingProvider.SESSION_MAINTAIN_PROPERTY, true);
	}

	// This constructor requires JAX-WS API 2.2. You will need to endorse the
	// 2.2
	// API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS
	// 2.1
	// compliant code instead.
	public DatosTesisWS_Service(WebServiceFeature... features) {
		super(WSDL_LOCATION, SERVICE, features);
	}

	// This constructor requires JAX-WS API 2.2. You will need to endorse the
	// 2.2
	// API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS
	// 2.1
	// compliant code instead.
	public DatosTesisWS_Service(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, SERVICE, features);
	}

	// This constructor requires JAX-WS API 2.2. You will need to endorse the
	// 2.2
	// API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS
	// 2.1
	// compliant code instead.
	public DatosTesisWS_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 * 
	 * @return returns DatosTesisWSSoap
	 */
	@WebEndpoint(name = "DatosTesisWSSoap12")
	public DatosTesisWSSoap getDatosTesisWSSoap12() {

		DatosTesisWSSoap port = super.getPort(DatosTesisWSSoap12, DatosTesisWSSoap.class);

		setCredentials(port);

		return port;
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns DatosTesisWSSoap
	 */
	@WebEndpoint(name = "DatosTesisWSSoap12")
	public DatosTesisWSSoap getDatosTesisWSSoap12(WebServiceFeature... features) {

		DatosTesisWSSoap port = super.getPort(DatosTesisWSSoap12, DatosTesisWSSoap.class, features);

		setCredentials(port);

		return port;

	}

	/**
	 * 
	 * @return returns DatosTesisWSSoap
	 */
	@WebEndpoint(name = "DatosTesisWSSoap")
	public DatosTesisWSSoap getDatosTesisWSSoap() {

		DatosTesisWSSoap port = super.getPort(DatosTesisWSSoap, DatosTesisWSSoap.class);

		setCredentials(port);

		return port;

	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns DatosTesisWSSoap
	 */
	@WebEndpoint(name = "DatosTesisWSSoap")
	public DatosTesisWSSoap getDatosTesisWSSoap(WebServiceFeature... features) {

		DatosTesisWSSoap port = super.getPort(DatosTesisWSSoap, DatosTesisWSSoap.class, features);

		setCredentials(port);

		return port;

	}

}
